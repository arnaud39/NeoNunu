{"version":3,"sources":["ActionProvider.js","MessageParser.js","components/LearningOptions/LearningOptions.jsx","components/Welcome/Welcome.jsx","components/AdditionalInfos/Additional.jsx","components/WhatPurpose/WhatPurpose.jsx","components/LinkList/LinkList.jsx","config.js","App.js","reportWebVitals.js","index.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","createClientMessage","key","mapFunction","el","greetingMessage","widgetList","widget","updateChatbotState","handleJavascriptList","message","this","setState","messageList","additionalInfo","whatPurpose","nearestBank","nearestBankNext","amoutOfMoney","tooLow","socialConnect","errorSocialConnect","sucessCheck","push","mst","choiceMessage","prevState","messages","MessageParser","actionProvider","state","lowerCaseMessage","toLowerCase","includes","test","LearningOptions","props","optionsMarkup","text","handler","id","map","option","className","onClick","WelcomeUser","Additional","whereInvesting","WhatPurpose","LinkList","linkMarkup","options","link","href","url","target","rel","config","botName","initialMessages","customStyles","botMessageBox","backgroundColor","chatButton","widgets","widgetName","widgetFunc","App","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3f9e61f.chunk.js","sourcesContent":["// ActionProvider starter code\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.messageList = {\n      additionalInfo: \"I am designed to help humans.\",\n      whatPurpose: \"Great, friend. For which purpose would you like to take out a loan?\",\n      nearestBank: \"According to my data, you are at a short distance away these banks.\",\n      nearestBankNext: \"With whom would you like to get in touch afterwards ?\",\n      amoutOfMoney: \"Amazing ! Now, let's go down to business. Can you tell me how much money you need?\",\n      tooLow: \"Considering your needs, I can redirect you to an instant loan offer.\",\n      socialConnect: \"I need to gather some infos. To faster the process, you can connect with these social media. I'll get the information I need if you agree\",\n      errorSocialConnect: \"I am sorry, there was an error. Could you connect again ?\",\n      sucessCheck: \"It is all good! Let's check together that the information I've retrieved is the right one.\",\n    \n    }\n    this.widgetList= {\n      additionalInfo: \"additionalInfo\",\n      whatPurpose: \"whatPurpose\",\n      nearestBank: \"nearestBank\",\n      nearestBankNext: \"nearestBankNext\",\n      amoutOfMoney: \"amoutOfMoney\",\n      tooLow: \"tooLow\",\n      socialConnect: \"socialConnect\",\n      errorSocialConnect: \"errorSocialConnect\",\n      sucessCheck: \"sucessCheck\",\n    }\n\n    this.push = {};\n    for (var key in this.messageList){\n      this.push[key] = this.mapFunction(key,this.messageList[key]);\n    }\n  }\n\n\n  mapFunction = (key,el) => () => {\n    //retrieve widget name\n    let greetingMessage;\n    if (this.widgetList[key]){\n      greetingMessage = this.createChatBotMessage(el, {\n        widget: this.widgetList[key],\n      });\n    }\n    else {\n      greetingMessage = this.createChatBotMessage(el);\n    }\n    this.updateChatbotState(greetingMessage);\n  }\n\n\n  test() {\n    const mst = this.createChatBotMessage(this.messageList.nearestBank, {\n      widget: \"learningOptions\",\n    }\n    );\n    this.updateChatbotState(mst);\n  }\n  handleJavascriptList = () => {\n    const message = this.createChatBotMessage(\n      \"Fantastic, I've got the following resources for you on Javascript:\",\n      {\n        widget: \"javascriptLinks\",\n      }\n    );\n\n    this.updateChatbotState(message);\n  };\n\n  chooseInvestment() {\n    const choiceMessage = this.createChatBotMessage(\"Hi, I'm here to help. What do you want to learn?\", {\n      widget: \"learningOptions\",\n    });\n    this.updateChatbotState(choiceMessage);\n\n  }\n\n  updateChatbotState(message) {\n \n    // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\n     \n        \n       this.setState(prevState => ({\n          ...prevState, messages: [...prevState.messages, message]\n        }))\n      }\n\n}\n\nexport default ActionProvider;\n","// MessageParser starter code\n\n\n\nclass MessageParser {\n  constructor(actionProvider, state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes(\"hello\") ||lowerCaseMessage.includes(\"hi\")){\n      this.actionProvider.test();\n    }\n\n\n  }\n}\n\nexport default MessageParser;\n","// in src/components/LearningOptions/LearningOptions.jsx\n\nimport React from \"react\";\n\nimport \"./LearningOptions.css\";\n\nconst LearningOptions = (props) => {\n  const options = [\n    { text: \"Javascript\", handler: props.actionProvider.handleJavascriptList, id: 1 },\n    { text: \"Data visualization\", handler: () => {}, id: 2 },\n    { text: \"APIs\", handler: () => {}, id: 3 },\n    { text: \"Security\", handler: () => {}, id: 4 },\n    { text: \"Interview prep\", handler: () => {}, id: 5 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"learning-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n};\n\nexport default LearningOptions;\n\n","\nimport React from \"react\";\n\nimport \"./Welcome.css\";\n\nconst WelcomeUser = (props) => {\n  const options = [\n    { text: \"Hi Fundfinder !\", handler: props.actionProvider.push.whatPurpose, id: 1 },\n    { text: \"Tell me more\", handler: props.actionProvider.push.additionalInfo, id: 2 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"welcome-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"welcome-options-container\">{optionsMarkup}</div>;\n};\n\nexport default WelcomeUser;\n\n","\nimport React from \"react\";\n\nimport \"./Additional.css\";\n\nconst Additional = (props) => {\n  const options = [\n    { text: \"I get it!\", handler: props.actionProvider.push.whereInvesting, id: 1 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"additional-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"additional-options-container\">{optionsMarkup}</div>;\n};\n\nexport default Additional;\n\n","\nimport React from \"react\";\n\nimport \"./WhatPurpose.css\";\n\n\nconst WhatPurpose = (props) => {\n  const options = [\n    { text: \"Personal purpose\", handler: props.actionProvider.push.whatPurpose, id: 1 },\n    { text: \"Professional project\", handler: props.actionProvider.push.whatPurpose, id: 2 },\n    { text: \"Other\", handler: props.actionProvider.push.whatPurpose, id: 3 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"what-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"what-options-container\">{optionsMarkup}</div>;\n};\n\nexport default WhatPurpose;\n\n","import React from \"react\";\n\nimport \"./LinkList.css\";\n\nconst LinkList = (props) => {\n  const linkMarkup = props.options.map((link) => (\n    <li key={link.id} className=\"link-list-item\">\n      <a\n        href={link.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"link-list-item-url\"\n      >\n        {link.text}\n      </a>\n    </li>\n  ));\n\n  return <ul className=\"link-list\">{linkMarkup}</ul>;\n};\n\nexport default LinkList;","// Config starter code\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport LearningOptions from \"./components/LearningOptions/LearningOptions\";\nimport WelcomeUser from \"./components/Welcome/Welcome\";\nimport Additional from \"./components/AdditionalInfos/Additional\";\nimport WhatPurpose from \"./components/WhatPurpose/WhatPurpose\";\nimport LinkList from \"./components/LinkList/LinkList\";\n\n\nconst welcomeMessage = \"Hi, I am Fundfinder, powered by artificial intelligence. I will guide you to success by helping you with your next loan. Feel free to ask any question\";\n\nconst config = { \n  botName: \"fundFinder\",\n  initialMessages: [createChatBotMessage(welcomeMessage, {\n    widget: \"welcomeUser\",\n  }\n  )\n  ],\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    chatButton: {\n      backgroundColor: \"#376B7E\",\n    },\n  },\n  widgets: [\n    {\n      widgetName: \"learningOptions\",\n     widgetFunc: (props) => <LearningOptions {...props} />,\n    },\n    {\n      widgetName: \"welcomeUser\",\n     widgetFunc: (props) => <WelcomeUser {...props} />,\n    },\n    {\n      widgetName: \"additionalInfo\",\n     widgetFunc: (props) => <Additional {...props} />,\n    },\n    {\n      widgetName: \"whatPurpose\",\n     widgetFunc: (props) => <WhatPurpose {...props} />,\n    },\n    {\n      widgetName: \"javascriptLinks\",\n      widgetFunc: (props) => <LinkList {...props} />,\n      props: {\n        options: [\n          {\n            text: \"Introduction to JS\",\n            url:\n              \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/\",\n            id: 1,\n          },\n          {\n            text: \"Mozilla JS Guide\",\n            url:\n              \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\",\n            id: 2,\n          },\n          {\n            text: \"Frontend Masters\",\n            url: \"https://frontendmasters.com\",\n            id: 3,\n          },\n        ],\n      },\n    },\n  ],\n}\n\nexport default config\n","import React from 'react';\nimport Chatbot from 'react-chatbot-kit'\nimport './App.css';\n\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport config from './config';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}